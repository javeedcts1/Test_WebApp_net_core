# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main
- dev
- stage
- preprod

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


###test###

stages: 
- stage: pipelinetest
  jobs:
  - job: test_script
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
          Write-Host "Running the script hereeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
          Write-output "Running the script hereeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
          Write-Host $(Build.SourceBranch)
          Write-Host $(Build.SourceBranch)
          Write-Host $(Build.SourceBranch)
          Write-Host $(Build.SourceBranch)
          Write-Host $(Build.SourceBranch)

- stage: stage
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/Stage')
  jobs:
  - job: Build
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  - job: Stage_job_deploy
    dependsOn: Build
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '9fc0f583-f07e-4c61-bbfb-2f0bd0a1b279'
        definition: '9'
        buildVersionToDownload: 'latest'
        allowPartiallySucceededBuilds: true
        allowFailedBuilds: true
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        azureSubscription: 'azspn'
        appType: 'webApp'
        WebAppName: 'javedwebappstage'
        packageForLinux: '$(Pipeline.Workspace)/drop/WebApp.zip'
- stage: Dev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/Dev'))
  jobs:
  - job: Build
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  - job: Dev_job_deploy
    dependsOn: Build
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '9fc0f583-f07e-4c61-bbfb-2f0bd0a1b279'
        definition: '9'
        buildVersionToDownload: 'latest'
        allowPartiallySucceededBuilds: true
        allowFailedBuilds: true
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        azureSubscription: 'azspn'
        appType: 'webApp'
        WebAppName: 'javedwebappdev'
        packageForLinux: '$(Pipeline.Workspace)/drop/WebApp.zip'

- stage: preProd_Deployment
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/preprod')
  jobs:
  - deployment: preProd_Deploy
    displayName: deploy web app in preprod-slot
    environment: 'Prod_ENV'
  - job: Build
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  - job: preprod_webslot_deploy
    dependsOn: Build
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '9fc0f583-f07e-4c61-bbfb-2f0bd0a1b279'
        definition: '9'
        buildVersionToDownload: 'latest'
        allowPartiallySucceededBuilds: true
        allowFailedBuilds: true
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        azureSubscription: 'azspn'
        WebAppName: javedwebappprod
        deployToSlotOrASE: true
        ResourceGroupName: 'AZ_App_service_prod'
        SlotName: 'javedwebappprod-prepod'
        packageForLinux: '$(Pipeline.Workspace)/drop/WebApp.zip'
- stage: Prod_Deployment
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
  - deployment: Prod_Deploy
    displayName: deploy web app in prod
    environment: 'Prod_ENV'
  - job: Build
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  - job: prod_job_deploy
    dependsOn: Build
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Get-ChildItem $(Agent.TempDirectory) -Recurse
          write-output '##############################################################################'
          Get-ChildItem $(build.artifactStagingDirectory) -Recurse
          write-output '##############################################################################'
          write-output '##############################################################################'
#    - task: ArchiveFiles@2
#      displayName: 'Archive Files'
#      inputs:
#        rootFolderOrFile: '$(Agent.TempDirectory)\WebAppContent'
#        includeRootFolder: false
    - task: AzureRmWebAppDeployment@4
      inputs:
        azureSubscription: 'azspn'
        appType: 'webApp'
        WebAppName: 'javedwebappprod'
        packageForLinux: '$(build.artifactStagingDirectory)\WebApp.zip'



